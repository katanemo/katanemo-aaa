{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/docs",
          "tagsPath": "/docs/tags",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/musamalik/Downloads/docu/my-website/sidebars.js",
          "contentPath": "/Users/musamalik/Downloads/docu/my-website/docs",
          "contentPathLocalized": "/Users/musamalik/Downloads/docu/my-website/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "accounts",
              "id": "accounts",
              "title": "Accounts",
              "description": "To get started, visit https://console.katanemo.com/sign-up to get a Katanemo account. To create an account you must provide an email address. Katanemo will send you an email with a link to verify your domain. Follow the link received in email to complete the sign-up process, and you will be redirected to the Katanemo (service provider) console where you can create and manage your SaaS (API) services, distribute on-boarding links to your customers and subscribers, view access logs and invite additional members to operate on Katanemo.",
              "source": "@site/docs/accounts.md",
              "sourceDirName": ".",
              "slug": "/accounts",
              "permalink": "/docs/accounts",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Overview",
                "permalink": "/docs/overview"
              },
              "next": {
                "title": "Developer Quick Start Guide",
                "permalink": "/docs/developer-quick-start-guide"
              }
            },
            {
              "unversionedId": "concepts/authorization-evaluation-logic",
              "id": "concepts/authorization-evaluation-logic",
              "title": "Authorization Evaluation Logic",
              "description": "The following sequence diagram describes how policy evaluation and authorization happens in Katanemo. Authorization is conducted by ARC, a decentralized, light-weight utility managed by Katanemo that neatly integrates via an SDK or at your API gateway layer. For more details, see How to Integrate ARC (Authorization Runtime Client)",
              "source": "@site/docs/concepts/authorization-evaluation-logic.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/authorization-evaluation-logic",
              "permalink": "/docs/concepts/authorization-evaluation-logic",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 10,
              "frontMatter": {
                "sidebar_position": 10
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Crypto Offload and Session Tokens",
                "permalink": "/docs/concepts/crypto-offload-and-sessions-tokens"
              },
              "next": {
                "title": "Use Cases",
                "permalink": "/docs/category/use-cases"
              }
            },
            {
              "unversionedId": "concepts/authorization-principles",
              "id": "concepts/authorization-principles",
              "title": "Authorization Principles",
              "description": "Katanemo performs authorization checks on operations performed by principals in Katanemo. This includes Users, API Keys, Roles, and OIDC-based users that integrate via SSO with Katanemo. The following guide will refer to these entities as simply principals going forward.",
              "source": "@site/docs/concepts/authorization-principles.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/authorization-principles",
              "permalink": "/docs/concepts/authorization-principles",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Concepts",
                "permalink": "/docs/category/concepts"
              },
              "next": {
                "title": "Service",
                "permalink": "/docs/concepts/service"
              }
            },
            {
              "unversionedId": "concepts/connections",
              "id": "concepts/connections",
              "title": "Connections",
              "description": "Katanemo enables customers to invite and manage Users via the CIAM console. But enterprise customers will demand that they federate users via an existing Identity provider (Idp) . Katanemo supports Single sign-on (SSO) for OIDC and SAML compliant Identity providers like Okta, Ping, Auth0 via Connections. An enterprise IT administrator simply creates a Connection to their preferred Idp, and Katanemo uses the upstream Idp to initiate login and manages the token lifecycle before returning an authorization code to the application via its configured redirect_uri. For more details, read How to Configure a New OIDC connection?",
              "source": "@site/docs/concepts/connections.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/connections",
              "permalink": "/docs/concepts/connections",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Resource Access (via Tags)",
                "permalink": "/docs/concepts/resource-access-via-tags"
              },
              "next": {
                "title": "Keys",
                "permalink": "/docs/concepts/keys"
              }
            },
            {
              "unversionedId": "concepts/crypto-offload-and-sessions-tokens",
              "id": "concepts/crypto-offload-and-sessions-tokens",
              "title": "Crypto Offload and Session Tokens",
              "description": "Katanemo is an OIDC compliant 3xA service, which means that it generates an idtoken, an accesstoken for users and API keys, and optionally a refresh_token as per the ODIC spec. These tokens are encrypted with an RSA256 (RS-256) signature key. You can retrieve the RSA public key via Katanemo’s JSON Web Key Set (JWKS).",
              "source": "@site/docs/concepts/crypto-offload-and-sessions-tokens.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/crypto-offload-and-sessions-tokens",
              "permalink": "/docs/concepts/crypto-offload-and-sessions-tokens",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 9,
              "frontMatter": {
                "sidebar_position": 9
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Scopes (OAuth 2.0)",
                "permalink": "/docs/concepts/scopes-oauth"
              },
              "next": {
                "title": "Authorization Evaluation Logic",
                "permalink": "/docs/concepts/authorization-evaluation-logic"
              }
            },
            {
              "unversionedId": "concepts/keys",
              "id": "concepts/keys",
              "title": "Keys",
              "description": "Client Keys consist of an identifier, and a secret value used to identify client machines. APIs can be consumed in three primary ways:",
              "source": "@site/docs/concepts/keys.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/keys",
              "permalink": "/docs/concepts/keys",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 7,
              "frontMatter": {
                "sidebar_position": 7
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Connections",
                "permalink": "/docs/concepts/connections"
              },
              "next": {
                "title": "Scopes (OAuth 2.0)",
                "permalink": "/docs/concepts/scopes-oauth"
              }
            },
            {
              "unversionedId": "concepts/organizations",
              "id": "concepts/organizations",
              "title": "Organizations",
              "description": "An organization is a container for SaaS customers to organize roles, manage users, machine (API) keys, SSO settings, and pull audit logs. An organization is created when a SaaS customer signs up to a SaaS application managed by Katanemo. Organizations also act as a thin wrapper to facilitate critical interactions between SaaS developers and SaaS customers. Developers can use Organizations in Katanemo to get detailed information about their customers and to set meta-data like subscription tiers, enabled/disable features, support prompts etc.",
              "source": "@site/docs/concepts/organizations.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/organizations",
              "permalink": "/docs/concepts/organizations",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Service",
                "permalink": "/docs/concepts/service"
              },
              "next": {
                "title": "Roles",
                "permalink": "/docs/concepts/roles"
              }
            },
            {
              "unversionedId": "concepts/resource-access-via-tags",
              "id": "concepts/resource-access-via-tags",
              "title": "Resource Access (via Tags)",
              "description": "Tags consist of a key and value pair, and are part of a resource’s meta-data. Tags are used to ensure that API resources that belong to a set of principals are only accessible by those principals. Tags and Roles complement each other to create a powerful, yet simple authorization strategy. Roles capture what API operations can be performed by a principal, and Tags capture which resources are accessible to a set of principals. SaaS developers store Tags for resources created by their customers, and customers attach Tags to authorization principals to be used in authorization.",
              "source": "@site/docs/concepts/resource-access-via-tags.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/resource-access-via-tags",
              "permalink": "/docs/concepts/resource-access-via-tags",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Roles",
                "permalink": "/docs/concepts/roles"
              },
              "next": {
                "title": "Connections",
                "permalink": "/docs/concepts/connections"
              }
            },
            {
              "unversionedId": "concepts/roles",
              "id": "concepts/roles",
              "title": "Roles",
              "description": "Roles establish a permission boundary that enables access to select API operations of a SaaS application. You don’t need to learn a new policy language to create Roles. Simply associate a list of OpenAPI-based operations (API paths and HTTP methods) with a Role, and assign Roles to Users or API Keys to enforce a strict authorization boundary. For example, the below UI shows how an API subscriber can define a Role for a set of API operations of an SaaS EHR application. Once the Role gets assigned to a User or an API Key, those principals are then limited to only those API operations associated with the Role. For instance the “Intern” Role below can only conduct the following API operations.",
              "source": "@site/docs/concepts/roles.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/roles",
              "permalink": "/docs/concepts/roles",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Organizations",
                "permalink": "/docs/concepts/organizations"
              },
              "next": {
                "title": "Resource Access (via Tags)",
                "permalink": "/docs/concepts/resource-access-via-tags"
              }
            },
            {
              "unversionedId": "concepts/scopes-oauth",
              "id": "concepts/scopes-oauth",
              "title": "Scopes (OAuth 2.0)",
              "description": "Katanemo makes working with OAuth2.0 scopes super simple. As an API developer you simply define “service-defined” Roles in your OpenAPI spec via Katanemo extensions. A “service-defined” Role is simply a unique name mapped to a set of OpenAPI operations (resource paths and HTTP methods). 3rd party developers simply use “service-defined” role names as scopes when initiating an OAuth2.0 flow via the /oauth/authorize endpoint for that specific OpenAPI Service instance. Katanemo’s evaluation engine maps OAuth2.0 claims received in the JWT to “service-defined” Roles via the claim name, and performs the appropriate authorization checks. Note, service-defined Roles can’t be modified by API subscribers.",
              "source": "@site/docs/concepts/scopes-oauth.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/scopes-oauth",
              "permalink": "/docs/concepts/scopes-oauth",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 8,
              "frontMatter": {
                "sidebar_position": 8
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Keys",
                "permalink": "/docs/concepts/keys"
              },
              "next": {
                "title": "Crypto Offload and Session Tokens",
                "permalink": "/docs/concepts/crypto-offload-and-sessions-tokens"
              }
            },
            {
              "unversionedId": "concepts/service",
              "id": "concepts/service",
              "title": "Service",
              "description": "A Katanemo Service is a representation of the API surface area that developers want to enrich with enterprise-readiness capabilities (authentication, authorization, auditing - 3xA). Services are created using the familiar OpenAPI standard. OpenAPI neatly captures RESTful API definitions, resource schemas and establishes a great foundation for authorization and auditing. With familiar RESTful semantics developers (and customers) don’t need to learn a new policy language, and get to enrich their API experience with rich 3xA capabilities without having to build and scale complex authorization and auditing engines",
              "source": "@site/docs/concepts/service.md",
              "sourceDirName": "concepts",
              "slug": "/concepts/service",
              "permalink": "/docs/concepts/service",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Authorization Principles",
                "permalink": "/docs/concepts/authorization-principles"
              },
              "next": {
                "title": "Organizations",
                "permalink": "/docs/concepts/organizations"
              }
            },
            {
              "unversionedId": "customer-quick-start",
              "id": "customer-quick-start",
              "title": "Customer Quick Start Guide",
              "description": "This guide is intended for developers to share with their customers so that they use Katanemo’ Customer Identity and Access Management (CIAM) capabilities to manage authorization policies, view audit logs and define a multi-modal identity experience for their SaaS application. As a developer you must replace { placeholder } values before sharing this guide with your customers.",
              "source": "@site/docs/customer-quick-start.md",
              "sourceDirName": ".",
              "slug": "/customer-quick-start",
              "permalink": "/docs/customer-quick-start",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Developer Quick Start Guide",
                "permalink": "/docs/developer-quick-start-guide"
              },
              "next": {
                "title": "Concepts",
                "permalink": "/docs/category/concepts"
              }
            },
            {
              "unversionedId": "developer-quick-start-guide",
              "id": "developer-quick-start-guide",
              "title": "Developer Quick Start Guide",
              "description": "Katanemo supports an OpenAPI-based development workflow. You simply define RESTful APIs just like you would today via the OpenAPI spec, publish that spec to Katanemo and instantly add user/federated authentication to your application and build powerful privacy and collaboration features via Katanemo’s Role-based Access Control (RBAC) and Attribute-based Access Control (ABAC) capabilities. Katanemo offers a holistic approach to identity, privacy, and safe collaboration that empowers developers to focus on what matters most: moving fast in building features and capabilities unique to their business.",
              "source": "@site/docs/developer-quick-start-guide.md",
              "sourceDirName": ".",
              "slug": "/developer-quick-start-guide",
              "permalink": "/docs/developer-quick-start-guide",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Accounts",
                "permalink": "/docs/accounts"
              },
              "next": {
                "title": "Customer Quick Start Guide",
                "permalink": "/docs/customer-quick-start"
              }
            },
            {
              "unversionedId": "how-to-guides/all-tags-must-match-modification",
              "id": "how-to-guides/all-tags-must-match-modification",
              "title": "How to Modify the Default “all tags must match” Behavior of Katanemo?",
              "description": "Katanemo’s default behavior is to match all tags associated with a resource against tags present in the session token (of the principal) making the call. However, you can alter this default behavior for your particular use case by adding the “where” clause to your Role definition (aka. Role policies).",
              "source": "@site/docs/how-to-guides/all-tags-must-match-modification.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/all-tags-must-match-modification",
              "permalink": "/docs/how-to-guides/all-tags-must-match-modification",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to Integrate the Katanemo SDK in your application (Authorization Runtime Client)?",
                "permalink": "/docs/how-to-guides/katanemo-sdk-integration"
              },
              "next": {
                "title": "How to Configure a New OIDC connection?",
                "permalink": "/docs/how-to-guides/oidc-connection"
              }
            },
            {
              "unversionedId": "how-to-guides/existing-identity-provider",
              "id": "how-to-guides/existing-identity-provider",
              "title": "How to use an existing Identity Provider (like Okta, Auth0) with Katanemo?",
              "description": "If you already have an existing login experience and identity provider (like Okta, Auth0) for your service, but want to use the remaining functionality that Katanemo offers (self-service enterprise SSO, fine-grained authorization, safety policies for your API paths and methods, etc.) you can easily use your existing identity pool to work with Katanemo. Your Idp (identity provider) must support JSON Web Tokens (JWTs) for the integration to work effortlessly.",
              "source": "@site/docs/how-to-guides/existing-identity-provider.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/existing-identity-provider",
              "permalink": "/docs/how-to-guides/existing-identity-provider",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to Configure Field-Level Access Control (and filtering) via Katanemo Roles?",
                "permalink": "/docs/how-to-guides/field-level-access-control-via-katanemo"
              },
              "next": {
                "title": "How to do OAuth2.0 via Katanemo?",
                "permalink": "/docs/how-to-guides/how-to-add-oauth"
              }
            },
            {
              "unversionedId": "how-to-guides/field-level-access-control-via-katanemo",
              "id": "how-to-guides/field-level-access-control-via-katanemo",
              "title": "How to Configure Field-Level Access Control (and filtering) via Katanemo Roles?",
              "description": "Katanemo allows you (a subscriber of a service) to easily construct Roles via OpenAPI semantics (RESTful paths and http methods) that limit operations for a user/machine. This approach requires little to no learning curve in establishing simple yet powerful authorization rules for consuming a service.",
              "source": "@site/docs/how-to-guides/field-level-access-control-via-katanemo.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/field-level-access-control-via-katanemo",
              "permalink": "/docs/how-to-guides/field-level-access-control-via-katanemo",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to Configure a New Okta SAML connection?",
                "permalink": "/docs/how-to-guides/okta-saml-connection"
              },
              "next": {
                "title": "How to use an existing Identity Provider (like Okta, Auth0) with Katanemo?",
                "permalink": "/docs/how-to-guides/existing-identity-provider"
              }
            },
            {
              "unversionedId": "how-to-guides/how-to-add-oauth",
              "id": "how-to-guides/how-to-add-oauth",
              "title": "How to do OAuth2.0 via Katanemo?",
              "description": "",
              "source": "@site/docs/how-to-guides/how-to-add-oauth.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/how-to-add-oauth",
              "permalink": "/docs/how-to-guides/how-to-add-oauth",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to use an existing Identity Provider (like Okta, Auth0) with Katanemo?",
                "permalink": "/docs/how-to-guides/existing-identity-provider"
              },
              "next": {
                "title": "How to invite add users and assign them tags in Katanemo?",
                "permalink": "/docs/how-to-guides/how-to-invite-users"
              }
            },
            {
              "unversionedId": "how-to-guides/how-to-invite-users",
              "id": "how-to-guides/how-to-invite-users",
              "title": "How to invite add users and assign them tags in Katanemo?",
              "description": "",
              "source": "@site/docs/how-to-guides/how-to-invite-users.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/how-to-invite-users",
              "permalink": "/docs/how-to-guides/how-to-invite-users",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 7,
              "frontMatter": {
                "sidebar_position": 7
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to do OAuth2.0 via Katanemo?",
                "permalink": "/docs/how-to-guides/how-to-add-oauth"
              }
            },
            {
              "unversionedId": "how-to-guides/katanemo-sdk-integration",
              "id": "how-to-guides/katanemo-sdk-integration",
              "title": "How to Integrate the Katanemo SDK in your application (Authorization Runtime Client)?",
              "description": "Katanemo’s Authorization Runtime Client (ARC) is the leight-weight utility that does the intelligent heavy lifting of protecting who can do what on which resource (authorization). As a developer, you can configure ARC at the gateway layer of your SaaS (API) service in minutes. Katanemo offers two primary integration points with varying levels of support to suit your specific environment needs.",
              "source": "@site/docs/how-to-guides/katanemo-sdk-integration.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/katanemo-sdk-integration",
              "permalink": "/docs/how-to-guides/katanemo-sdk-integration",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How-To Guides",
                "permalink": "/docs/category/how-to-guides"
              },
              "next": {
                "title": "How to Modify the Default “all tags must match” Behavior of Katanemo?",
                "permalink": "/docs/how-to-guides/all-tags-must-match-modification"
              }
            },
            {
              "unversionedId": "how-to-guides/oidc-connection",
              "id": "how-to-guides/oidc-connection",
              "title": "How to Configure a New OIDC connection?",
              "description": "Each SSO Identity Provider requires specific information to create and configure a new Connection. Often, the information required to create a Connection will differ by Identity Provider. To create an OpenID Connect (OIDC) Connection, you’ll need five pieces of information: a Redirect URI, a Client ID, a Client Secret, a Discovery Endpoint, and a Role.",
              "source": "@site/docs/how-to-guides/oidc-connection.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/oidc-connection",
              "permalink": "/docs/how-to-guides/oidc-connection",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to Modify the Default “all tags must match” Behavior of Katanemo?",
                "permalink": "/docs/how-to-guides/all-tags-must-match-modification"
              },
              "next": {
                "title": "How to Configure a New Okta SAML connection?",
                "permalink": "/docs/how-to-guides/okta-saml-connection"
              }
            },
            {
              "unversionedId": "how-to-guides/okta-saml-connection",
              "id": "how-to-guides/okta-saml-connection",
              "title": "How to Configure a New Okta SAML connection?",
              "description": "Each SSO Identity Provider requires specific information to create and configure a new SAML-based Connection. Often, the information required to create a new Connection will slightly differ by Identity Provider. To create an Okta SAML Connection, you’ll need three pieces of information: the Assertion Consumer Service (ACS) URL, a SP Entity ID, and an IdP Metadata URL.",
              "source": "@site/docs/how-to-guides/okta-saml-connection.md",
              "sourceDirName": "how-to-guides",
              "slug": "/how-to-guides/okta-saml-connection",
              "permalink": "/docs/how-to-guides/okta-saml-connection",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "How to Configure a New OIDC connection?",
                "permalink": "/docs/how-to-guides/oidc-connection"
              },
              "next": {
                "title": "How to Configure Field-Level Access Control (and filtering) via Katanemo Roles?",
                "permalink": "/docs/how-to-guides/field-level-access-control-via-katanemo"
              }
            },
            {
              "unversionedId": "overview",
              "id": "overview",
              "title": "Overview",
              "description": "Katanemo helps developers build critical privacy and collaboration features for SaaS applications that unlocks growth. Katanemo is a purpose-built identity and fine-grained authorization system designed for modern SaaS applications - it unifies customer onboarding and identity (authentication), protects who can do what on which resource (authorization), and leaves a structured audit trail that helps developers meet exacting compliance requirements on behalf of their customers. With Katanemo, developers can add PLG motions via a frictionless on-boarding experience, and expand into new enterprise scenarios in minutes via powerful governance and sharing features for SaaS resources.",
              "source": "@site/docs/overview.md",
              "sourceDirName": ".",
              "slug": "/overview",
              "permalink": "/docs/overview",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "katanemoSidebar",
              "next": {
                "title": "Accounts",
                "permalink": "/docs/accounts"
              }
            },
            {
              "unversionedId": "use-cases/health-records-use-case",
              "id": "use-cases/health-records-use-case",
              "title": "HL7 FHIR (Health Records Exchange via an EHR system)",
              "description": "The Fast Healthcare Interoperability Resources (FIHR) is a standard describing data formats, elements and an application programming interface for exchanging electronic health records. The standard was created by the Health Level Seven (HL7) International health-care standards organization.",
              "source": "@site/docs/use-cases/health-records-use-case.md",
              "sourceDirName": "use-cases",
              "slug": "/use-cases/health-records-use-case",
              "permalink": "/docs/use-cases/health-records-use-case",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "Use Cases",
                "permalink": "/docs/category/use-cases"
              },
              "next": {
                "title": "Saas (API) Managed Cloud Service",
                "permalink": "/docs/use-cases/oidc-connection"
              }
            },
            {
              "unversionedId": "use-cases/oidc-connection",
              "id": "use-cases/oidc-connection",
              "title": "Saas (API) Managed Cloud Service",
              "description": "SaaS (API) Managed Cloud Service use case.",
              "source": "@site/docs/use-cases/oidc-connection.md",
              "sourceDirName": "use-cases",
              "slug": "/use-cases/oidc-connection",
              "permalink": "/docs/use-cases/oidc-connection",
              "draft": false,
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "katanemoSidebar",
              "previous": {
                "title": "HL7 FHIR (Health Records Exchange via an EHR system)",
                "permalink": "/docs/use-cases/health-records-use-case"
              },
              "next": {
                "title": "How-To Guides",
                "permalink": "/docs/category/how-to-guides"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "katanemoSidebar": [
              {
                "type": "doc",
                "id": "overview"
              },
              {
                "type": "doc",
                "id": "accounts"
              },
              {
                "type": "doc",
                "id": "developer-quick-start-guide"
              },
              {
                "type": "doc",
                "id": "customer-quick-start"
              },
              {
                "type": "category",
                "label": "Concepts",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "concepts/authorization-principles"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/service"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/organizations"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/roles"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/resource-access-via-tags"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/connections"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/keys"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/scopes-oauth"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/crypto-offload-and-sessions-tokens"
                  },
                  {
                    "type": "doc",
                    "id": "concepts/authorization-evaluation-logic"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/concepts",
                  "permalink": "/docs/category/concepts"
                }
              },
              {
                "type": "category",
                "label": "Use Cases",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "use-cases/health-records-use-case"
                  },
                  {
                    "type": "doc",
                    "id": "use-cases/oidc-connection"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/use-cases",
                  "permalink": "/docs/category/use-cases"
                }
              },
              {
                "type": "category",
                "label": "How-To Guides",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "how-to-guides/katanemo-sdk-integration"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/all-tags-must-match-modification"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/oidc-connection"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/okta-saml-connection"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/field-level-access-control-via-katanemo"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/existing-identity-provider"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/how-to-add-oauth"
                  },
                  {
                    "type": "doc",
                    "id": "how-to-guides/how-to-invite-users"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/how-to-guides",
                  "permalink": "/docs/category/how-to-guides"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [],
      "blogListPaginated": [],
      "blogTags": {},
      "blogTagsListPath": "/blog/tags",
      "blogTagsPaginated": []
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/",
        "source": "@site/src/pages/index.tsx"
      },
      {
        "type": "mdx",
        "permalink": "/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "@cmfcmf/docusaurus-search-local": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}